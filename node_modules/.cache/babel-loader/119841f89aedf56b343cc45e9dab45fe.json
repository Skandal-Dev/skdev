{"ast":null,"code":"var _jsxFileName = \"/home/skandal-dev/Desktop/Programmation/perso/src/pages/cmd/cdm.js\";\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport cmd from \"./cmd.sass\";\nimport Competence from \"../competence\";\nimport PageManager from \"../PageManager\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Input extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this._handleKeyDown = e => {};\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"cmd-input\",\n      type: \"text\",\n      onKeyDown: this._handleKeyDown\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 14\n    }, this);\n  }\n\n}\n\nclass Cmd extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      input: '',\n      output: '',\n      page: false,\n      name: '',\n      cmd: -1,\n      cmdList: []\n    };\n    this.setInput = this.setInput.bind(this);\n  }\n\n  setInput(e) {\n    const firstWord = e.target.value.replace(/ .*/, '');\n    const listOfWords = e.target.value.split(' ');\n    const length = e.target.value.length;\n\n    if (firstWord === \"help\") {\n      this.setState({\n        output: `\n\n                Help - Show all commands <br />\n                Go [PAGE] - Navigate to a definate page <br />\n                Ls ([-a]) - Display all pages <br />\n                Music - Pop up Music player <br />\n               \n\n                Gif - Pop up random Gif <br />\n                Contact [mail] [title] [message] - Send me an email <br />\n                Clear - Clear terminal <br />\n                `\n      });\n    }\n\n    if (e.key === 'Enter') {\n      const saveValue = e.target.value;\n      this.setState({\n        input: firstWord\n      }); // Si le mot est GO\n\n      if (firstWord === \"go\") {\n        // S'il a un argument\n        if (listOfWords[1]) {\n          this.setState({\n            output: `Moving to ${listOfWords[1]} ...`\n          });\n\n          if (listOfWords[1] == 'Home' || listOfWords[1] == 'CV' || listOfWords[1] == 'Projets' || listOfWords[1] == 'Passions' || listOfWords[1] == 'Portfolio' || listOfWords[1] == 'Contact' || listOfWords[1] == 'Competences') {\n            this.setState({\n              page: true,\n              name: listOfWords[1]\n            });\n          } else {\n            this.setState({\n              page: true,\n              name: '404'\n            });\n          }\n        } else {\n          this.setState({\n            output: `go [destination]`,\n            page: false\n          });\n        } //err hdl\n\n\n        if (listOfWords[1]) {} //logic\n\n      } else if (firstWord === \"gif\") {} else if (firstWord === \"clear\") {} else if (firstWord === \"music\") {} else if (firstWord === \"ls\") {\n        this.setState({\n          output: `<ul>\n                <li><span className=\"fetch\">Home</span></li>\n                <li><span className=\"fetch\">CV</span></li>\n                <li><span className=\"fetch\">Projets</span></li>\n                <li><span className=\"fetch\">Compétences</span></li>\n                <li><span className=\"fetch\">Passions</span></li>\n                <li><span className=\"fetch\">Portfolio</span></li>\n                <li><span className=\"fetch\">Contact</span></li>\n            </ul>`\n        });\n      } else if (firstWord === \"help\") {} else {\n        this.setState({\n          output: 'unknown cmd',\n          page: false\n        });\n      }\n\n      console.log(listOfWords);\n    }\n  }\n\n  componentDidMount() {\n    return console.log(\"cmd montée\");\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"Cmd\",\n      className: \"\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"Cmd-text-area\",\n        class: \"text-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"code\", {\n          id: \"Cmd-Input\",\n          className: \"\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"cmd-input\",\n            type: \"text\",\n            onKeyDown: this.setInput,\n            placeholder: \"Write a command\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"code\", {\n          id: \"Cmd-Output\",\n          className: \"output\",\n          dangerouslySetInnerHTML: {\n            __html: this.state.output\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hr\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          id: \"PageManager\",\n          children: /*#__PURE__*/_jsxDEV(PageManager, {\n            page: this.state.page,\n            name: this.state.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 24\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\nexport default Cmd;","map":{"version":3,"sources":["/home/skandal-dev/Desktop/Programmation/perso/src/pages/cmd/cdm.js"],"names":["React","useState","ReactDOM","cmd","Competence","PageManager","Input","Component","_handleKeyDown","e","render","Cmd","constructor","props","state","input","output","page","name","cmdList","setInput","bind","firstWord","target","value","replace","listOfWords","split","length","setState","key","saveValue","console","log","componentDidMount","__html"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport cmd from  \"./cmd.sass\";\nimport Competence from \"../competence\";\nimport PageManager from \"../PageManager\";\n\nclass Input extends React.Component {\n    _handleKeyDown = (e) => {\n    \n    }\n  \n    render() {\n      return <input className=\"cmd-input\" type=\"text\" onKeyDown={this._handleKeyDown} />\n    }\n  }\n  \n\n\nclass Cmd extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            input: '',\n            output: '',\n            page: false,\n            name: '',\n            cmd: -1,\n            cmdList: []\n          }\n\n        this.setInput = this.setInput.bind(this);\n    }\n\n    \n\n    setInput(e){\n        \n\n        \n        const firstWord = e.target.value.replace(/ .*/,'');\n        const listOfWords = e.target.value.split(' ');\n        const length = e.target.value.length;\n\n\n        if (firstWord === \"help\"){\n            this.setState({\n                output: `\n\n                Help - Show all commands <br />\n                Go [PAGE] - Navigate to a definate page <br />\n                Ls ([-a]) - Display all pages <br />\n                Music - Pop up Music player <br />\n               \n\n                Gif - Pop up random Gif <br />\n                Contact [mail] [title] [message] - Send me an email <br />\n                Clear - Clear terminal <br />\n                `\n            });\n        }\n\n        \n\n\n\n        if (e.key === 'Enter') {\n        const saveValue = e.target.value;\n        this.setState({\n            input: firstWord\n        });\n\n\n        // Si le mot est GO\n        if (firstWord === \"go\"){\n\n            // S'il a un argument\n            if(listOfWords[1]){\n            this.setState({\n                output: `Moving to ${listOfWords[1]} ...`\n\n            })\n\n                if (listOfWords[1] == 'Home' || listOfWords[1] == 'CV' || listOfWords[1] == 'Projets' || listOfWords[1] == 'Passions' || listOfWords[1] == 'Portfolio' || listOfWords[1] == 'Contact'|| listOfWords[1] == 'Competences'){\n                    this.setState({\n                        page: true,\n                        name: listOfWords[1]\n                    })\n                }\n                else\n                {\n                    this.setState({\n                        page: true,\n                        name: '404'\n                    })\n                }\n        \n            }\n            else\n            {\n                this.setState({\n                    output: `go [destination]`,\n                    page: false\n                });\n            }\n\n            //err hdl\n            if (listOfWords[1]){\n              \n            \n        }\n            \n\n            //logic\n            \n        }\n        else if (firstWord === \"gif\"){\n            \n        }\n        else if (firstWord === \"clear\"){}\n        else if (firstWord === \"music\"){}\n        else if (firstWord === \"ls\"){\n            this.setState({\n                output: `<ul>\n                <li><span className=\"fetch\">Home</span></li>\n                <li><span className=\"fetch\">CV</span></li>\n                <li><span className=\"fetch\">Projets</span></li>\n                <li><span className=\"fetch\">Compétences</span></li>\n                <li><span className=\"fetch\">Passions</span></li>\n                <li><span className=\"fetch\">Portfolio</span></li>\n                <li><span className=\"fetch\">Contact</span></li>\n            </ul>`\n            })\n        }\n        else if (firstWord === \"help\"){}\n        else{\n            this.setState({\n                output: 'unknown cmd',\n                page: false\n            })\n        }\n        \n    \n\n        console.log(listOfWords);\n    }   \n        \n    }\n\n    componentDidMount(){\n        return console.log(\"cmd montée\")\n    }\n\n    \n\n    render() {\n        return (\n            <div id=\"Cmd\" className=\"\">\n                <div id=\"Cmd-text-area\" class=\"text-area\">\n                    <code id=\"Cmd-Input\" className=\"\">\n                        <input className=\"cmd-input\" type=\"text\" onKeyDown={this.setInput} placeholder=\"Write a command\">\n                        </input>\n                    </code>\n                    <br />\n                    <code  id=\"Cmd-Output\" className=\"output\" dangerouslySetInnerHTML={{__html: this.state.output}}>\n\n                    </code>\n                    <div className=\"hr\"></div>\n\n                    <div className=\"\" id=\"PageManager\">\n                       <PageManager page={this.state.page} name={this.state.name}></PageManager>\n                    </div>\n                </div>\n            </div>\n        );\n        \n        \n    }\n};\n\n\nexport default Cmd;"]},"metadata":{},"sourceType":"module"}