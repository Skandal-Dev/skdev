{"ast":null,"code":"var _jsxFileName = \"/home/skandal-dev/Desktop/Programmation/skdev/src/pages/cmd/cdm.js\";\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport cmd from \"./cmd.sass\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Input extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this._handleKeyDown = e => {};\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"cmd-input\",\n      type: \"text\",\n      onKeyDown: this._handleKeyDown\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 14\n    }, this);\n  }\n\n}\n\nclass Cmd extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      input: '',\n      output: '',\n      cmd: -1,\n      cmdList: []\n    };\n    this.setInput = this.setInput.bind(this);\n  }\n\n  setInput(e) {\n    const firstWord = e.target.value.replace(/ .*/, '');\n    const listOfWords = e.target.value.split(' ');\n    const length = e.target.value.length;\n\n    if (firstWord === \"help\") {\n      this.setState({\n        output: \"Help - Show all commands; Go [PAGE] - Navigate to a definate page; Ls ([-a]) - Display all pages; Music - Pop up Music player; Gif - Pop up random Gif - Contact [mail] [title] [message] - Send me an email - Clear - Clear terminal\"\n      });\n    }\n\n    if (firstWord === \"go\") {\n      if (!listOfWords[1]) this.setState({\n        output: `go ${listOfWords[1]}`\n      });\n    }\n\n    if (e.key === 'Enter') {\n      const saveValue = e.target.value;\n      this.setState({\n        input: firstWord\n      });\n      console.log(listOfWords);\n    }\n  }\n\n  componentDidMount() {\n    return console.log(\"cmd montée\");\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"Cmd\",\n      className: \"\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"Cmd-text-area\",\n        class: \"text-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"code\", {\n          id: \"Cmd-Input\",\n          className: \"\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"cmd-input\",\n            type: \"text\",\n            onKeyDown: this.setInput,\n            placeholder: \"Write a command\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"code\", {\n          id: \"Cmd-Output\",\n          className: \"output\",\n          children: this.state.output\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\nexport default Cmd;","map":{"version":3,"sources":["/home/skandal-dev/Desktop/Programmation/skdev/src/pages/cmd/cdm.js"],"names":["React","useState","ReactDOM","cmd","Input","Component","_handleKeyDown","e","render","Cmd","constructor","props","state","input","output","cmdList","setInput","bind","firstWord","target","value","replace","listOfWords","split","length","setState","key","saveValue","console","log","componentDidMount"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAiB,YAAjB;;;AAEA,MAAMC,KAAN,SAAoBJ,KAAK,CAACK,SAA1B,CAAoC;AAAA;AAAA;;AAAA,SAChCC,cADgC,GACdC,CAAD,IAAO,CAEvB,CAH+B;AAAA;;AAKhCC,EAAAA,MAAM,GAAG;AACP,wBAAO;AAAO,MAAA,SAAS,EAAC,WAAjB;AAA6B,MAAA,IAAI,EAAC,MAAlC;AAAyC,MAAA,SAAS,EAAE,KAAKF;AAAzD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAP+B;;AAYpC,MAAMG,GAAN,SAAkBT,KAAK,CAACK,SAAxB,CAAkC;AAE9BK,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,MAAM,EAAE,EAFC;AAGTX,MAAAA,GAAG,EAAE,CAAC,CAHG;AAITY,MAAAA,OAAO,EAAE;AAJA,KAAb;AAOA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACH;;AAIDD,EAAAA,QAAQ,CAACT,CAAD,EAAG;AAIP,UAAMW,SAAS,GAAGX,CAAC,CAACY,MAAF,CAASC,KAAT,CAAeC,OAAf,CAAuB,KAAvB,EAA6B,EAA7B,CAAlB;AACA,UAAMC,WAAW,GAAGf,CAAC,CAACY,MAAF,CAASC,KAAT,CAAeG,KAAf,CAAqB,GAArB,CAApB;AACA,UAAMC,MAAM,GAAGjB,CAAC,CAACY,MAAF,CAASC,KAAT,CAAeI,MAA9B;;AAEA,QAAIN,SAAS,KAAK,MAAlB,EAAyB;AACrB,WAAKO,QAAL,CAAc;AACVX,QAAAA,MAAM,EAAE;AADE,OAAd;AAGH;;AAED,QAAII,SAAS,KAAK,IAAlB,EAAuB;AACnB,UAAG,CAACI,WAAW,CAAC,CAAD,CAAf,EACA,KAAKG,QAAL,CAAc;AACVX,QAAAA,MAAM,EAAG,MAAKQ,WAAW,CAAC,CAAD,CAAI;AADnB,OAAd;AAIH;;AAID,QAAIf,CAAC,CAACmB,GAAF,KAAU,OAAd,EAAuB;AACvB,YAAMC,SAAS,GAAGpB,CAAC,CAACY,MAAF,CAASC,KAA3B;AACA,WAAKK,QAAL,CAAc;AACVZ,QAAAA,KAAK,EAAEK;AADG,OAAd;AAGAU,MAAAA,OAAO,CAACC,GAAR,CAAYP,WAAZ;AACH;AAEA;;AAEDQ,EAAAA,iBAAiB,GAAE;AACf,WAAOF,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAP;AACH;;AAIDrB,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,EAAE,EAAC,KAAR;AAAc,MAAA,SAAS,EAAC,EAAxB;AAAA,6BACI;AAAK,QAAA,EAAE,EAAC,eAAR;AAAwB,QAAA,KAAK,EAAC,WAA9B;AAAA,gCACI;AAAM,UAAA,EAAE,EAAC,WAAT;AAAqB,UAAA,SAAS,EAAC,EAA/B;AAAA,iCACI;AAAO,YAAA,SAAS,EAAC,WAAjB;AAA6B,YAAA,IAAI,EAAC,MAAlC;AAAyC,YAAA,SAAS,EAAE,KAAKQ,QAAzD;AAAmE,YAAA,WAAW,EAAC;AAA/E;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI;AAAA;AAAA;AAAA;AAAA,gBALJ,eAMI;AAAO,UAAA,EAAE,EAAC,YAAV;AAAuB,UAAA,SAAS,EAAC,QAAjC;AAAA,oBAA2C,KAAKJ,KAAL,CAAWE;AAAtD;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAeH;;AAxE6B;;AAyEjC;AAGD,eAAeL,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport cmd from  \"./cmd.sass\";\n\nclass Input extends React.Component {\n    _handleKeyDown = (e) => {\n    \n    }\n  \n    render() {\n      return <input className=\"cmd-input\" type=\"text\" onKeyDown={this._handleKeyDown} />\n    }\n  }\n  \n\n\nclass Cmd extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            input: '',\n            output: '',\n            cmd: -1,\n            cmdList: []\n          }\n\n        this.setInput = this.setInput.bind(this);\n    }\n\n    \n\n    setInput(e){\n        \n\n        \n        const firstWord = e.target.value.replace(/ .*/,'');\n        const listOfWords = e.target.value.split(' ');\n        const length = e.target.value.length;\n\n        if (firstWord === \"help\"){\n            this.setState({\n                output: \"Help - Show all commands; Go [PAGE] - Navigate to a definate page; Ls ([-a]) - Display all pages; Music - Pop up Music player; Gif - Pop up random Gif - Contact [mail] [title] [message] - Send me an email - Clear - Clear terminal\"\n            });\n        }\n\n        if (firstWord === \"go\"){\n            if(!listOfWords[1])\n            this.setState({\n                output: `go ${listOfWords[1]}`\n            })\n\n        }\n\n\n\n        if (e.key === 'Enter') {\n        const saveValue = e.target.value;\n        this.setState({\n            input: firstWord\n        });\n        console.log(listOfWords);\n    }   \n        \n    }\n\n    componentDidMount(){\n        return console.log(\"cmd montée\")\n    }\n\n    \n\n    render() {\n        return (\n            <div id=\"Cmd\" className=\"\">\n                <div id=\"Cmd-text-area\" class=\"text-area\">\n                    <code id=\"Cmd-Input\" className=\"\">\n                        <input className=\"cmd-input\" type=\"text\" onKeyDown={this.setInput} placeholder=\"Write a command\">\n                        </input>\n                    </code>\n                    <br />\n                    <code  id=\"Cmd-Output\" className=\"output\">{this.state.output}</code>\n\n                </div>\n            </div>\n        );\n        \n        \n    }\n};\n\n\nexport default Cmd;"]},"metadata":{},"sourceType":"module"}